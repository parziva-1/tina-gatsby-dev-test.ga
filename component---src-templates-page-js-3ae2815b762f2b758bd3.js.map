{"version":3,"sources":["webpack:///./src/blocks/form.js","webpack:///./src/blocks/title.js","webpack:///./src/blocks/image.js","webpack:///./src/blocks/content.js","webpack:///./src/templates/page.js"],"names":["Form","form","StyledForm","name","action","recipient","method","fields","map","field","inputType","FormField","wide","for","slugify","label","cols","rows","id","type","autocorrect","autocomplete","length","primary","value","base","key","component","FormBlock","defaultItem","description","templates","customInputBlock","nameInputBlock","emailInputBlock","phoneInputBlock","companyInputBlock","messageInputBlock","styled","props","theme","breakpoints","medium","div","radius","small","easing","color","foreground","mix","background","secondary","isDarkMode","css","p","Title","page","data","centered","center","StyledTitle","title","underline","Hr","h2","hr","Image","image","childImageSharp","ImageWrapper","fluid","ImageBlock","parse","filename","uploadDir","previewSrc","formValues","fieldProps","pathName","input","replace","imageNode","get","src","Content","html","StyledContent","dangerouslySetInnerHTML","__html","Page","useLocalJsonForm","PageForm","blocks","i","_template","content","childrenPagesJsonBlockMarkdown","childMarkdownRemark","jsonNode","hero","itemProps","item","link","TitleBlock","ContentBlock","pageQuery"],"mappings":"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","file":"component---src-templates-page-js-3ae2815b762f2b758bd3.js","sourcesContent":["import React from \"react\"\r\nimport { Button } from \"../components/style\"\r\nimport styled, { css } from \"styled-components\"\r\nimport { mix } from \"polished\"\r\nimport slugify from \"react-slugify\"\r\n\r\nexport function Form({ form }) {\r\n  return (\r\n    <StyledForm\r\n      name=\"contact\"\r\n      action={`https://formspree.io/${form.recipient}`}\r\n      method=\"POST\"\r\n    >\r\n      {form.fields.map(field => {\r\n        if (field.inputType === \"textarea\") {\r\n          return (\r\n            <FormField wide>\r\n              <label for={slugify(field.label)}>{field.label}</label>\r\n              <textarea\r\n                cols=\"40\"\r\n                rows=\"5\"\r\n                name={slugify(field.label)}\r\n                id={slugify(field.label)}\r\n              ></textarea>\r\n            </FormField>\r\n          )\r\n        } else {\r\n          return (\r\n            <FormField>\r\n              <label for={slugify(field.label)}>{field.label}</label>\r\n              <input\r\n                id={slugify(field.label)}\r\n                name={slugify(field.label)}\r\n                type={field.inputType}\r\n                autocorrect=\"off\"\r\n                autocomplete={field.autocomplete | ``}\r\n              />\r\n            </FormField>\r\n          )\r\n        }\r\n      })}\r\n      {form.fields.length > 0 && (\r\n        <FormField wide>\r\n          <Button primary type=\"submit\" value=\"Submit\">\r\n            Submit\r\n          </Button>\r\n        </FormField>\r\n      )}\r\n    </StyledForm>\r\n  )\r\n}\r\n\r\nconst base = {\r\n  name: \"customInput\",\r\n  key: \"label\",\r\n  component: \"group\",\r\n  fields: [\r\n    { name: \"label\", label: \"Label\", component: \"text\" },\r\n    { name: \"inputType\", label: \"Input Type\", component: \"text\" },\r\n    { name: \"autocomplete\", label: \"Autocomplete\", component: \"text\" },\r\n  ],\r\n}\r\n\r\nexport const customInputBlock = {\r\n  label: \"Custom Input\",\r\n  ...base,\r\n}\r\n\r\nexport const nameInputBlock = {\r\n  label: \"Name Input\",\r\n  defaultItem: {\r\n    label: \"Name\",\r\n    inputType: \"text\",\r\n    autocomplete: \"name\",\r\n  },\r\n  ...base,\r\n}\r\n\r\nexport const emailInputBlock = {\r\n  label: \"Email Input\",\r\n  defaultItem: {\r\n    label: \"Email\",\r\n    inputType: \"text\",\r\n    autocomplete: \"email\",\r\n  },\r\n  ...base,\r\n}\r\n\r\nexport const phoneInputBlock = {\r\n  label: \"Phone Input\",\r\n  defaultItem: {\r\n    label: \"Phone\",\r\n    inputType: \"text\",\r\n    autocomplete: \"tel\",\r\n  },\r\n  ...base,\r\n}\r\n\r\nexport const companyInputBlock = {\r\n  label: \"Company Input\",\r\n  defaultItem: {\r\n    label: \"Company\",\r\n    inputType: \"text\",\r\n    autocomplete: \"organization\",\r\n  },\r\n  ...base,\r\n}\r\n\r\nexport const messageInputBlock = {\r\n  label: \"Message Input\",\r\n  defaultItem: {\r\n    label: \"Message\",\r\n    inputType: \"textarea\",\r\n    autocomplete: \"\",\r\n  },\r\n  ...base,\r\n}\r\n\r\nexport const FormBlock = {\r\n  label: \"Form\",\r\n  key: \"name\",\r\n  name: \"form\",\r\n  component: \"group\",\r\n  defaultItem: {\r\n    name: \"Form\",\r\n    recipient: \"\",\r\n    fields: [],\r\n  },\r\n  fields: [\r\n    { name: \"name\", label: \"Name\", component: \"text\" },\r\n    {\r\n      name: \"recipient\",\r\n      label: \"Recipient\",\r\n      description: \"Form is sent via formspree.io.\",\r\n      component: \"text\",\r\n    },\r\n    {\r\n      label: \"Fields\",\r\n      name: \"fields\",\r\n      component: \"blocks\",\r\n      templates: {\r\n        customInputBlock,\r\n        nameInputBlock,\r\n        emailInputBlock,\r\n        phoneInputBlock,\r\n        companyInputBlock,\r\n        messageInputBlock,\r\n      },\r\n    },\r\n  ],\r\n}\r\n\r\nexport const StyledForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: auto;\r\n  grid-gap: 1.5rem;\r\n  justify-items: stretch;\r\n\r\n  @media (min-width: ${props => props.theme.breakpoints.medium}) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`\r\n\r\nexport const FormField = styled.div`\r\n  input,\r\n  textarea {\r\n    position: relative;\r\n    line-height: 2.25rem;\r\n    font-size: 1rem;\r\n    padding: 0 0.625rem;\r\n    border-radius: ${props => props.theme.radius.small};\r\n    border: none;\r\n    width: 100%;\r\n    transition: box-shadow 150ms ${props => props.theme.easing};\r\n    color: ${props => props.theme.color.foreground};\r\n    background-color: ${props =>\r\n      mix(0.95, props.theme.color.background, props.theme.color.foreground)};\r\n\r\n    &:focus {\r\n      outline: none;\r\n      box-shadow: 0 0 0 3px ${props => props.theme.color.secondary};\r\n    }\r\n\r\n    ${props =>\r\n      props.theme.isDarkMode &&\r\n      css`\r\n        background-color: ${props => props.theme.color.background};\r\n      `};\r\n  }\r\n\r\n  textarea {\r\n    line-height: 1.5;\r\n    padding: 0.5rem 0.625rem;\r\n    resize: vertical;\r\n  }\r\n\r\n  label {\r\n    display: block;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n\r\n  ${p =>\r\n    p.wide &&\r\n    css`\r\n      @media (min-width: ${props => props.theme.breakpoints.medium}) {\r\n        grid-column-start: 1;\r\n        grid-column-end: 3;\r\n      }\r\n    `};\r\n`\r\n","import React from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\n\r\nexport function Title({ page, data }) {\r\n  const centered = data.center ? data.center : false\r\n  return (\r\n    <>\r\n      <StyledTitle center={centered}>\r\n        {data && data.title ? data.title : page.title ? page.title : \"\"}\r\n      </StyledTitle>\r\n      {data && data.underline && <Hr center={centered} />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst StyledTitle = styled.h2`\r\n  font-size: 2.2em;\r\n  line-height: 1.2;\r\n  word-spacing: 1px;\r\n  font-weight: 700;\r\n\r\n  ${props =>\r\n    props.center &&\r\n    css`\r\n      text-align: center;\r\n    `};\r\n`\r\n\r\nconst Hr = styled.hr`\r\n  margin: 2.2rem 0;\r\n\r\n  ${props =>\r\n    props.center &&\r\n    css`\r\n      margin-left: auto;\r\n      margin-right: auto;\r\n    `};\r\n`\r\n\r\nexport const TitleBlock = {\r\n  label: \"Title\",\r\n  name: \"title\",\r\n  defaultItem: {\r\n    title: \"\",\r\n    center: false,\r\n    underline: true,\r\n  },\r\n  fields: [\r\n    { name: \"title\", label: \"Title\", component: \"text\" },\r\n    { name: \"center\", label: \"Center\", component: \"toggle\" },\r\n    { name: \"underline\", label: \"Underline\", component: \"toggle\" },\r\n  ],\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Img from \"gatsby-image\"\r\nimport get from \"lodash.get\"\r\n\r\nexport function Image({ data }) {\r\n  return (\r\n    data.image &&\r\n    data.image.childImageSharp && (\r\n      <ImageWrapper>\r\n        <Img fluid={data.image.childImageSharp.fluid} />\r\n      </ImageWrapper>\r\n    )\r\n  )\r\n}\r\n\r\nconst ImageWrapper = styled.div`\r\n  overflow: hidden;\r\n`\r\n\r\nexport const ImageBlock = {\r\n  label: \"Image\",\r\n  name: \"image\",\r\n  key: \"test\",\r\n  defaultItem: {\r\n    image: \"\",\r\n  },\r\n  fields: [\r\n    {\r\n      label: \"Image\",\r\n      name: \"image\",\r\n      component: \"image\",\r\n      parse: filename => `../images/${filename}`,\r\n      uploadDir: () => `/content/images/`,\r\n      previewSrc: (formValues, fieldProps) => {\r\n        const pathName = fieldProps.input.name.replace(\"rawJson\", \"jsonNode\")\r\n        const imageNode = get(formValues, pathName)\r\n        if (!imageNode || !imageNode.childImageSharp) return \"\"\r\n        return imageNode.childImageSharp.fluid.src\r\n      },\r\n    },\r\n  ],\r\n}\r\n","import React from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\n\r\nexport function Content({ data, html }) {\r\n  const centered = data.center ? data.center : false\r\n  return (\r\n    <StyledContent\r\n      center={centered}\r\n      dangerouslySetInnerHTML={{\r\n        __html: html,\r\n      }}\r\n    ></StyledContent>\r\n  )\r\n}\r\n\r\nconst StyledContent = styled.div`\r\n  ${props =>\r\n    props.center &&\r\n    css`\r\n      text-align: center;\r\n    `};\r\n`\r\n\r\nexport const ContentBlock = {\r\n  label: \"Content\",\r\n  name: \"content\",\r\n  key: \"test\",\r\n  defaultItem: {\r\n    content: \"\",\r\n    center: false,\r\n  },\r\n  fields: [\r\n    { name: \"content\", label: \"Content\", component: \"markdown\" },\r\n    { name: \"center\", label: \"Center\", component: \"toggle\" },\r\n  ],\r\n}\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { Paper } from \"../components/style\"\r\nimport { Form, FormBlock } from \"../blocks/form\"\r\nimport { Title, TitleBlock } from \"../blocks/title\"\r\nimport { Image, ImageBlock } from \"../blocks/image\"\r\nimport { Content, ContentBlock } from \"../blocks/content\"\r\nimport { PageLayout } from \"../components/pageLayout\"\r\n\r\nimport { useLocalJsonForm } from \"gatsby-tinacms-json\"\r\n\r\nexport default function Page({ data }) {\r\n  const [page] = useLocalJsonForm(data.page, PageForm)\r\n  const blocks = page.blocks ? page.blocks : []\r\n\r\n  return (\r\n    <PageLayout page={page}>\r\n      <Paper>\r\n        {blocks &&\r\n          blocks.map(({ _template, ...data }, i) => {\r\n            switch (_template) {\r\n              case \"TitleBlock\":\r\n                return <Title page={page} data={data} />\r\n              case \"ImageBlock\":\r\n                return <Image data={data} />\r\n              case \"FormBlock\":\r\n                return <Form form={data} />\r\n              case \"ContentBlock\":\r\n                if (data.content && page.childrenPagesJsonBlockMarkdown[i])\r\n                  return (\r\n                    <Content\r\n                      data={data}\r\n                      html={\r\n                        page.childrenPagesJsonBlockMarkdown[i]\r\n                          .childMarkdownRemark.html\r\n                      }\r\n                    />\r\n                  )\r\n                break\r\n              default:\r\n                return true\r\n            }\r\n          })}\r\n      </Paper>\r\n    </PageLayout>\r\n  )\r\n}\r\n\r\nconst PageForm = {\r\n  label: \"Page\",\r\n  fields: [\r\n    {\r\n      label: \"Title\",\r\n      name: \"rawJson.title\",\r\n      component: \"text\",\r\n    },\r\n    {\r\n      label: \"Hero\",\r\n      name: \"rawJson.hero\",\r\n      component: \"group\",\r\n      fields: [\r\n        {\r\n          label: \"Headline\",\r\n          name: \"headline\",\r\n          component: \"text\",\r\n        },\r\n        {\r\n          label: \"Textline\",\r\n          name: \"textline\",\r\n          component: \"text\",\r\n        },\r\n        {\r\n          label: \"Image\",\r\n          name: \"image\",\r\n          component: \"image\",\r\n          parse: (filename) => `../images/${filename}`,\r\n          uploadDir: () => `/content/images/`,\r\n          previewSrc: (formValues, input) => {\r\n            if (!formValues.jsonNode.hero || !formValues.jsonNode.hero.image)\r\n              return \"\"\r\n            return formValues.jsonNode.hero.image.childImageSharp.fluid.src\r\n          },\r\n        },\r\n        {\r\n          label: \"Actions\",\r\n          name: \"ctas\",\r\n          component: \"group-list\",\r\n          itemProps: (item) => ({\r\n            key: item.link,\r\n            label: item.label,\r\n          }),\r\n          fields: [\r\n            {\r\n              label: \"Label\",\r\n              name: \"label\",\r\n              component: \"text\",\r\n            },\r\n            {\r\n              label: \"Link\",\r\n              name: \"link\",\r\n              component: \"text\",\r\n            },\r\n            {\r\n              label: \"Primary\",\r\n              name: \"primary\",\r\n              component: \"toggle\",\r\n            },\r\n            {\r\n              label: \"Arrow\",\r\n              name: \"arrow\",\r\n              component: \"toggle\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          label: \"Large\",\r\n          name: \"large\",\r\n          component: \"toggle\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: \"Page Sections\",\r\n      name: \"rawJson.blocks\",\r\n      component: \"blocks\",\r\n      templates: {\r\n        TitleBlock,\r\n        ImageBlock,\r\n        FormBlock,\r\n        ContentBlock,\r\n      },\r\n    },\r\n  ],\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    page: pagesJson(path: { eq: $path }) {\r\n      title\r\n      displayTitle\r\n      hero {\r\n        headline\r\n        textline\r\n        large\r\n        overlay\r\n        image {\r\n          childImageSharp {\r\n            fluid(quality: 70, maxWidth: 1920) {\r\n              ...GatsbyImageSharpFluid_withWebp\r\n            }\r\n          }\r\n        }\r\n        ctas {\r\n          label\r\n          link\r\n          primary\r\n          arrow\r\n        }\r\n      }\r\n      blocks {\r\n        _template\r\n        content\r\n        name\r\n        title\r\n        underline\r\n        center\r\n        recipient\r\n        fields {\r\n          label\r\n          inputType\r\n          autocomplete\r\n        }\r\n        image {\r\n          childImageSharp {\r\n            fluid(quality: 70, maxWidth: 1920) {\r\n              ...GatsbyImageSharpFluid_withWebp\r\n            }\r\n          }\r\n        }\r\n      }\r\n      childrenPagesJsonBlockMarkdown {\r\n        childMarkdownRemark {\r\n          html\r\n        }\r\n      }\r\n\r\n      rawJson\r\n      fileRelativePath\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}